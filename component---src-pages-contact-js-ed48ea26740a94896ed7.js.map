{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/contact.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/components/sectiontitle.js"],"names":["React","createElement","Layout","SEO","lang","title","style","minHeight","Contact","_React$Component","props","_this2","call","state","submitDisabled","textAreaInput","bind","handleSubmit","showContactForm","contact","api_url","_inheritsLoose","_proto","prototype","event","target","height","scrollHeight","preventDefault","this","setState","body","encodeURI","dataName","value","dataEmail","dataMessage","fetch","method","then","res","json","result","resMessage","opacity","response","innerHTML","classList","add","remove","_this","setTimeout","error","componentDidMount","color","window","getComputedStyle","btn","getPropertyValue","querySelector","setAttribute","contactArea","querySelectorAll","forEach","e","i","p","render","id","className","SectionTitle","ref","c","type","name","required","overflowY","onChange","onClick","display","PaperPlane","Loading","description","mail","Envelope","href","phone","Mobile","address","whiteSpace","Mapmarker","SocialLinks","Component","StaticQuery","query","data","site","siteMetadata","_typeof","o","Symbol","iterator","constructor","toPropertyKey","t","r","toPrimitive","TypeError","String","Number","_defineProperties","length","enumerable","configurable","writable","Object","defineProperty","key","colorPrimary","colorSecondary","_id","counter","cp","cs","Fragment","width","viewBox","preserveAspectRatio","x1","x2","y1","y2","gradientUnits","stopColor","offset","textAnchor","x","y","fill","get","_counter"],"mappings":"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","file":"component---src-pages-contact-js-ed48ea26740a94896ed7.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Contact from \"../components/contact\";\r\n\r\nexport default function() {\r\n    return (\r\n        <Layout>\r\n            <SEO lang=\"en\" title=\"Contact\" />\r\n            <div style={{ minHeight: \"600px\" }}>\r\n                <Contact />\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport SectionTitle from \"./sectiontitle\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport { PaperPlane, Mapmarker, Mobile, Envelope, Loading } from \"./icons\";\r\nimport SocialLinks from \"./sociallinks\";\r\nimport \"../style/contact.less\";\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            submitDisabled: false\r\n        };\r\n\r\n        this.textAreaInput = this.textAreaInput.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.showContactForm = true;\r\n\r\n        if (this.props.contact.api_url === \"\") {\r\n            this.showContactForm = false;\r\n        }\r\n    }\r\n\r\n    textAreaInput(event) {\r\n        event.target.style.height = \"auto\";\r\n        event.target.style.height = event.target.scrollHeight + \"px\";\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!this.state.submitDisabled) {\r\n            this.setState({\r\n                submitDisabled: true\r\n            });\r\n\r\n            let name = encodeURI(this.dataName.value),\r\n                email = encodeURI(this.dataEmail.value),\r\n                message = encodeURI(this.dataMessage.value),\r\n                body = `name=${name}&email=${email}&message=${message}`;\r\n\r\n            fetch(this.props.contact.api_url, {\r\n                method: \"post\",\r\n                body: body\r\n            })\r\n                .then(function(res) {\r\n                    return res.json();\r\n                })\r\n                .then(\r\n                    result => {\r\n                        this.setState({\r\n                            submitDisabled: false\r\n                        });\r\n                        this.resMessage.style.opacity = 1;\r\n                        if (result.response === \"error\") {\r\n                            this.resMessage.innerHTML =\r\n                                \"There was an error in sending the message\";\r\n                            this.resMessage.classList.add(\"color-error\");\r\n                        } else {\r\n                            this.resMessage.innerHTML =\r\n                                \"Message sent succesfully\";\r\n                            this.resMessage.classList.remove(\"color-error\");\r\n                        }\r\n                        this.dataName.value = \"\";\r\n                        this.dataEmail.value = \"\";\r\n                        this.dataMessage.value = \"\";\r\n                        let _this = this;\r\n                        setTimeout(function() {\r\n                            _this.resMessage.style.opacity = 0;\r\n                        }, 5000);\r\n                    },\r\n                    error => {\r\n                        this.resMessage.innerHTML = \"Message sent succesfully\";\r\n                        this.resMessage.classList.remove(\"color-error\");\r\n                        this.setState({\r\n                            submitDisabled: false\r\n                        });\r\n                        let _this = this;\r\n                        setTimeout(function() {\r\n                            _this.resMessage.style.opacity = 0;\r\n                        }, 5000);\r\n                    }\r\n                );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.showContactForm) {\r\n            let color = window\r\n                .getComputedStyle(this.btn, null)\r\n                .getPropertyValue(\"color\");\r\n            this.btn.querySelector(\"path\").setAttribute(\"fill\", color);\r\n        }\r\n\r\n        let li = this.contactArea.querySelectorAll(\".item\");\r\n\r\n        li.forEach(function(e, i) {\r\n            let p = e.querySelector(\"path\");\r\n            if (p)\r\n                p.setAttribute(\r\n                    \"fill\",\r\n                    window.getComputedStyle(e, null).getPropertyValue(\"color\")\r\n                );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"contact\" className=\"container\">\r\n                <div className=\"section-title\">\r\n                    <SectionTitle title=\"CONTACT\" />\r\n                </div>\r\n                <div\r\n                    className={\"row\" + (this.showContactForm ? \"\" : \" no-form\")}\r\n                    ref={c => (this.contactArea = c)}\r\n                >\r\n                    {this.showContactForm && (\r\n                        <div className=\"col s12 m6\">\r\n                            <form>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Name\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                ref={c => (this.dataName = c)}\r\n                                                className=\"field-box\"\r\n                                                name=\"name\"\r\n                                                id=\"name\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Email\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                ref={c => (this.dataEmail = c)}\r\n                                                className=\"field-box\"\r\n                                                name=\"email\"\r\n                                                id=\"email\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Message\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <textarea\r\n                                                style={{ overflowY: \"hidden\" }}\r\n                                                ref={c =>\r\n                                                    (this.dataMessage = c)\r\n                                                }\r\n                                                className=\"field-box\"\r\n                                                onChange={this.textAreaInput}\r\n                                                name=\"message\"\r\n                                                id=\"message\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label className=\"ib\">\r\n                                        <button\r\n                                            className={\r\n                                                \"btn\" +\r\n                                                (this.state.submitDisabled\r\n                                                    ? \" disabled\"\r\n                                                    : \"\")\r\n                                            }\r\n                                            onClick={this.handleSubmit}\r\n                                            id=\"submit\"\r\n                                            ref={c => (this.btn = c)}\r\n                                        >\r\n                                            SEND{\" \"}\r\n                                            <span\r\n                                                className=\"icon paper-plane\"\r\n                                                style={{\r\n                                                    display: this.state\r\n                                                        .submitDisabled\r\n                                                        ? \"none\"\r\n                                                        : \"inline-block\"\r\n                                                }}\r\n                                            >\r\n                                                <PaperPlane />\r\n                                            </span>\r\n                                            <span\r\n                                                className=\"icon loading\"\r\n                                                style={{\r\n                                                    display: !this.state\r\n                                                        .submitDisabled\r\n                                                        ? \"none\"\r\n                                                        : \"inline-block\"\r\n                                                }}\r\n                                            >\r\n                                                <Loading />\r\n                                            </span>\r\n                                        </button>\r\n                                    </label>\r\n                                    <label>\r\n                                        <p\r\n                                            className=\"res-message\"\r\n                                            ref={c => (this.resMessage = c)}\r\n                                        ></p>\r\n                                    </label>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    )}\r\n                    <div\r\n                        className={\r\n                            this.showContactForm\r\n                                ? \"col s12 m6 details\"\r\n                                : \"col s12 details\"\r\n                        }\r\n                    >\r\n                        {this.props.contact.description && (\r\n                            <p className=\"text-tertiary\">\r\n                                {this.props.contact.description}\r\n                            </p>\r\n                        )}\r\n                        <ul>\r\n                            {this.props.contact.mail && (\r\n                                <li className=\"text-secondary item\">\r\n                                    <span className=\"icon\">\r\n                                        <Envelope />\r\n                                    </span>\r\n                                    <a\r\n                                        href={\r\n                                            \"mailto:\" + this.props.contact.mail\r\n                                        }\r\n                                    >\r\n                                        {this.props.contact.mail}\r\n                                    </a>\r\n                                </li>\r\n                            )}\r\n                            {this.props.contact.phone && (\r\n                                <li className=\"text-secondary item\">\r\n                                    <span className=\"icon\">\r\n                                        <Mobile />\r\n                                    </span>\r\n                                    <a href={\"tel:\" + this.props.contact.phone}>\r\n                                        {this.props.contact.phone}\r\n                                    </a>\r\n                                </li>\r\n                            )}\r\n                            {this.props.contact.address && (\r\n                                <li\r\n                                    className=\"text-tertiary item\"\r\n                                    style={{ whiteSpace: \"pre\" }}\r\n                                >\r\n                                    <span className=\"icon\">\r\n                                        <Mapmarker />\r\n                                    </span>\r\n                                    {this.props.contact.address}\r\n                                </li>\r\n                            )}\r\n                            <li>\r\n                                <SocialLinks />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default () => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        contact {\r\n                            api_url\r\n                            description\r\n                            mail\r\n                            phone\r\n                            address\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <Contact contact={data.site.siteMetadata.contact} />}\r\n    />\r\n);\r\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","import React from \"react\";\r\n\r\nclass SectionTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            colorPrimary: \"#00\",\r\n            colorSecondary: \"#00\"\r\n        };\r\n\r\n        this._id = SectionTitle.counter;\r\n    }\r\n\r\n    static get counter() {\r\n        SectionTitle._counter = (SectionTitle._counter || 0) + 1;\r\n        return SectionTitle._counter;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            colorPrimary: window\r\n                .getComputedStyle(this.cp, null)\r\n                .getPropertyValue(\"color\"),\r\n            colorSecondary: window\r\n                .getComputedStyle(this.cs, null)\r\n                .getPropertyValue(\"color\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <span ref={c => (this.cp = c)} className=\"color-primary\"></span>\r\n                <span\r\n                    ref={c => (this.cs = c)}\r\n                    className=\"color-secondary\"\r\n                ></span>\r\n                <svg\r\n                    width=\"100%\"\r\n                    height=\"150\"\r\n                    viewBox=\"0 0 100 100\"\r\n                    preserveAspectRatio=\"xMidYMid slice\"\r\n                >\r\n                    <linearGradient\r\n                        id={\"primaryGradient\" + this._id}\r\n                        x1=\"0\"\r\n                        x2=\"100%\"\r\n                        y1=\"0\"\r\n                        y2=\"0\"\r\n                        gradientUnits=\"userSpaceOnUse\"\r\n                    >\r\n                        <stop stopColor={\"#4CAF50\"} offset=\"0%\" />\r\n                        <stop\r\n                            stopColor={\"#6888DF\"}\r\n                            offset=\"85%\"\r\n                        />\r\n                    </linearGradient>\r\n                    <text\r\n                        textAnchor=\"middle\"\r\n                        x=\"50\"\r\n                        y=\"52\"\r\n                        fill={\"url(#primaryGradient\" + this._id + \")\"}\r\n                    >\r\n                        {this.props.title}\r\n                    </text>\r\n                </svg>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SectionTitle;\r\n"],"sourceRoot":""}