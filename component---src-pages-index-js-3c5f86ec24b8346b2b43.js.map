{"version":3,"sources":["webpack:///./src/components/date.js","webpack:///./src/components/contact.js","webpack:///./src/components/items-blog.js","webpack:///./src/pages/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/components/sectiontitle.js","webpack:///./src/components/items-portfolio.js"],"names":["_ref","data","d","Date","date","getDate","month","getMonth","year","getFullYear","React","createElement","Contact","_React$Component","props","_this2","call","state","submitDisabled","textAreaInput","bind","handleSubmit","showContactForm","contact","api_url","_inheritsLoose","_proto","prototype","event","target","style","height","scrollHeight","preventDefault","this","setState","body","encodeURI","dataName","value","dataEmail","dataMessage","fetch","method","then","res","json","result","resMessage","opacity","response","innerHTML","classList","add","remove","_this","setTimeout","error","componentDidMount","color","window","getComputedStyle","btn","getPropertyValue","querySelector","setAttribute","contactArea","querySelectorAll","forEach","e","i","p","render","id","className","SectionTitle","title","ref","c","type","name","required","overflowY","onChange","onClick","display","PaperPlane","Loading","description","mail","Envelope","href","phone","Mobile","address","whiteSpace","Mapmarker","SocialLinks","Component","StaticQuery","query","site","siteMetadata","IndexPage","winHeight","createSVGElement","n","v","document","createElementNS","setAttributeNS","componentWillUnmount","removeEventListener","setWindowHeight","addEventListener","sWidth","svg","clientWidth","tText","tWidth","getBoundingClientRect","width","tInnerText","split","length","tSpan","dy","x","appendChild","margin","fontSize","parseInt","innerHeight","Layout","placeholder","SEO","lang","viewBox","preserveAspectRatio","capitalizeTitleOnHome","toUpperCase","patternUnits","y","xlinkHref","fill","textAnchor","introTag","_typeof","o","Symbol","iterator","constructor","toPropertyKey","t","r","toPrimitive","TypeError","String","Number","_defineProperties","enumerable","configurable","writable","Object","defineProperty","key","colorPrimary","colorSecondary","_id","counter","cp","cs","Fragment","x1","x2","y1","y2","gradientUnits","stopColor","offset","get","_counter","PortfolioItem","apply","arguments","Img","fluid","node","frontmatter","image","childImageSharp","Link","to","fields","slug","aria-label","allMarkdownRemark","edges","items","push"],"mappings":"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","file":"component---src-pages-index-js-3c5f86ec24b8346b2b43.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function({ data }) {\r\n    let d = new Date(data),\r\n        months = [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\"\r\n        ],\r\n        date = d.getDate(),\r\n        month = d.getMonth(),\r\n        year = d.getFullYear();\r\n    return (\r\n        <span>\r\n            {months[month]} {date}, {year}\r\n        </span>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport SectionTitle from \"./sectiontitle\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport { PaperPlane, Mapmarker, Mobile, Envelope, Loading } from \"./icons\";\r\nimport SocialLinks from \"./sociallinks\";\r\nimport \"../style/contact.less\";\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            submitDisabled: false\r\n        };\r\n\r\n        this.textAreaInput = this.textAreaInput.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.showContactForm = true;\r\n\r\n        if (this.props.contact.api_url === \"\") {\r\n            this.showContactForm = false;\r\n        }\r\n    }\r\n\r\n    textAreaInput(event) {\r\n        event.target.style.height = \"auto\";\r\n        event.target.style.height = event.target.scrollHeight + \"px\";\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!this.state.submitDisabled) {\r\n            this.setState({\r\n                submitDisabled: true\r\n            });\r\n\r\n            let name = encodeURI(this.dataName.value),\r\n                email = encodeURI(this.dataEmail.value),\r\n                message = encodeURI(this.dataMessage.value),\r\n                body = `name=${name}&email=${email}&message=${message}`;\r\n\r\n            fetch(this.props.contact.api_url, {\r\n                method: \"post\",\r\n                body: body\r\n            })\r\n                .then(function(res) {\r\n                    return res.json();\r\n                })\r\n                .then(\r\n                    result => {\r\n                        this.setState({\r\n                            submitDisabled: false\r\n                        });\r\n                        this.resMessage.style.opacity = 1;\r\n                        if (result.response === \"error\") {\r\n                            this.resMessage.innerHTML =\r\n                                \"There was an error in sending the message\";\r\n                            this.resMessage.classList.add(\"color-error\");\r\n                        } else {\r\n                            this.resMessage.innerHTML =\r\n                                \"Message sent succesfully\";\r\n                            this.resMessage.classList.remove(\"color-error\");\r\n                        }\r\n                        this.dataName.value = \"\";\r\n                        this.dataEmail.value = \"\";\r\n                        this.dataMessage.value = \"\";\r\n                        let _this = this;\r\n                        setTimeout(function() {\r\n                            _this.resMessage.style.opacity = 0;\r\n                        }, 5000);\r\n                    },\r\n                    error => {\r\n                        this.resMessage.innerHTML = \"Message sent succesfully\";\r\n                        this.resMessage.classList.remove(\"color-error\");\r\n                        this.setState({\r\n                            submitDisabled: false\r\n                        });\r\n                        let _this = this;\r\n                        setTimeout(function() {\r\n                            _this.resMessage.style.opacity = 0;\r\n                        }, 5000);\r\n                    }\r\n                );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.showContactForm) {\r\n            let color = window\r\n                .getComputedStyle(this.btn, null)\r\n                .getPropertyValue(\"color\");\r\n            this.btn.querySelector(\"path\").setAttribute(\"fill\", color);\r\n        }\r\n\r\n        let li = this.contactArea.querySelectorAll(\".item\");\r\n\r\n        li.forEach(function(e, i) {\r\n            let p = e.querySelector(\"path\");\r\n            if (p)\r\n                p.setAttribute(\r\n                    \"fill\",\r\n                    window.getComputedStyle(e, null).getPropertyValue(\"color\")\r\n                );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"contact\" className=\"container\">\r\n                <div className=\"section-title\">\r\n                    <SectionTitle title=\"CONTACT\" />\r\n                </div>\r\n                <div\r\n                    className={\"row\" + (this.showContactForm ? \"\" : \" no-form\")}\r\n                    ref={c => (this.contactArea = c)}\r\n                >\r\n                    {this.showContactForm && (\r\n                        <div className=\"col s12 m6\">\r\n                            <form>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Name\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                ref={c => (this.dataName = c)}\r\n                                                className=\"field-box\"\r\n                                                name=\"name\"\r\n                                                id=\"name\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Email\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                ref={c => (this.dataEmail = c)}\r\n                                                className=\"field-box\"\r\n                                                name=\"email\"\r\n                                                id=\"email\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Message\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <textarea\r\n                                                style={{ overflowY: \"hidden\" }}\r\n                                                ref={c =>\r\n                                                    (this.dataMessage = c)\r\n                                                }\r\n                                                className=\"field-box\"\r\n                                                onChange={this.textAreaInput}\r\n                                                name=\"message\"\r\n                                                id=\"message\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label className=\"ib\">\r\n                                        <button\r\n                                            className={\r\n                                                \"btn\" +\r\n                                                (this.state.submitDisabled\r\n                                                    ? \" disabled\"\r\n                                                    : \"\")\r\n                                            }\r\n                                            onClick={this.handleSubmit}\r\n                                            id=\"submit\"\r\n                                            ref={c => (this.btn = c)}\r\n                                        >\r\n                                            SEND{\" \"}\r\n                                            <span\r\n                                                className=\"icon paper-plane\"\r\n                                                style={{\r\n                                                    display: this.state\r\n                                                        .submitDisabled\r\n                                                        ? \"none\"\r\n                                                        : \"inline-block\"\r\n                                                }}\r\n                                            >\r\n                                                <PaperPlane />\r\n                                            </span>\r\n                                            <span\r\n                                                className=\"icon loading\"\r\n                                                style={{\r\n                                                    display: !this.state\r\n                                                        .submitDisabled\r\n                                                        ? \"none\"\r\n                                                        : \"inline-block\"\r\n                                                }}\r\n                                            >\r\n                                                <Loading />\r\n                                            </span>\r\n                                        </button>\r\n                                    </label>\r\n                                    <label>\r\n                                        <p\r\n                                            className=\"res-message\"\r\n                                            ref={c => (this.resMessage = c)}\r\n                                        ></p>\r\n                                    </label>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    )}\r\n                    <div\r\n                        className={\r\n                            this.showContactForm\r\n                                ? \"col s12 m6 details\"\r\n                                : \"col s12 details\"\r\n                        }\r\n                    >\r\n                        {this.props.contact.description && (\r\n                            <p className=\"text-tertiary\">\r\n                                {this.props.contact.description}\r\n                            </p>\r\n                        )}\r\n                        <ul>\r\n                            {this.props.contact.mail && (\r\n                                <li className=\"text-secondary item\">\r\n                                    <span className=\"icon\">\r\n                                        <Envelope />\r\n                                    </span>\r\n                                    <a\r\n                                        href={\r\n                                            \"mailto:\" + this.props.contact.mail\r\n                                        }\r\n                                    >\r\n                                        {this.props.contact.mail}\r\n                                    </a>\r\n                                </li>\r\n                            )}\r\n                            {this.props.contact.phone && (\r\n                                <li className=\"text-secondary item\">\r\n                                    <span className=\"icon\">\r\n                                        <Mobile />\r\n                                    </span>\r\n                                    <a href={\"tel:\" + this.props.contact.phone}>\r\n                                        {this.props.contact.phone}\r\n                                    </a>\r\n                                </li>\r\n                            )}\r\n                            {this.props.contact.address && (\r\n                                <li\r\n                                    className=\"text-tertiary item\"\r\n                                    style={{ whiteSpace: \"pre\" }}\r\n                                >\r\n                                    <span className=\"icon\">\r\n                                        <Mapmarker />\r\n                                    </span>\r\n                                    {this.props.contact.address}\r\n                                </li>\r\n                            )}\r\n                            <li>\r\n                                <SocialLinks />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default () => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        contact {\r\n                            api_url\r\n                            description\r\n                            mail\r\n                            phone\r\n                            address\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <Contact contact={data.site.siteMetadata.contact} />}\r\n    />\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport Date from \"./date\";\r\nimport { Calendar } from \"./icons\";\r\nimport \"../style/list-blog.less\";\r\n\r\nclass BlogItem extends React.Component {\r\n    componentDidMount() {\r\n        this.color = window\r\n            .getComputedStyle(this.textSecondary, null)\r\n            .getPropertyValue(\"color\");\r\n        const calendar = this.textSecondary.querySelector(\"path\");\r\n        calendar.setAttribute(\"fill\", this.color);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item col s12 m6\">\r\n                <div className=\"box\">\r\n                    <div className=\"image\">\r\n                        <Img\r\n                            fluid={\r\n                                this.props.data.node.frontmatter.image\r\n                                    .childImageSharp.fluid\r\n                            }\r\n                        />\r\n                        <Link\r\n                            to={this.props.data.node.fields.slug}\r\n                            title={this.props.data.node.frontmatter.title}\r\n                            aria-label={this.props.data.node.frontmatter.title}\r\n                            className=\"overlay-link\"\r\n                            style={{ opacity: 0 }}\r\n                        >\r\n                            {this.props.data.node.frontmatter.title}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <h3 className=\"text-primary\">\r\n                            <Link\r\n                                to={this.props.data.node.fields.slug}\r\n                                title={this.props.data.node.frontmatter.title}\r\n                            >\r\n                                {this.props.data.node.frontmatter.title}\r\n                            </Link>\r\n                        </h3>\r\n                        <p className=\"text-tertiary\">\r\n                            {this.props.data.node.frontmatter.description}\r\n                        </p>\r\n                        <p\r\n                            className=\"date text-secondary\"\r\n                            ref={c => (this.textSecondary = c)}\r\n                        >\r\n                            <span className=\"icon\">\r\n                                <Calendar />\r\n                            </span>\r\n                            <Date\r\n                                data={this.props.data.node.frontmatter.date}\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default function(props) {\r\n    const data = props.data.allMarkdownRemark.edges;\r\n    let items = [];\r\n    data.forEach(function(e, i) {\r\n        if (props.remove && e.node.id === props.remove) return;\r\n        items.push(<BlogItem key={e.node.id} data={e} />);\r\n    });\r\n    return <div className=\"row\">{items}</div>;\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport { graphql } from \"gatsby\";\r\nimport SEO from \"../components/seo\";\r\nimport SocialLinks from \"../components/sociallinks\";\r\nimport PortfolioList from \"../components/list-portfolio\";\r\nimport BlogList from \"../components/list-blog\";\r\nimport Contact from \"../components/contact\";\r\nimport \"../style/wall.less\";\r\n\r\nclass IndexPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            winHeight: \"100vh\"\r\n        };\r\n    }\r\n\r\n    createSVGElement(n, v) {\r\n        n = document.createElementNS(\"http://www.w3.org/2000/svg\", n);\r\n        for (var p in v) n.setAttributeNS(null, p, v[p]);\r\n        return n;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.setWindowHeight);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setWindowHeight();\r\n\r\n        window.addEventListener(\"resize\", this.setWindowHeight);\r\n\r\n        let sWidth = this.svg.clientWidth,\r\n            tText = this.svg.querySelector(\"text\"),\r\n            tWidth = tText.getBoundingClientRect().width;\r\n\r\n        if (tWidth > sWidth) {\r\n            let tInnerText = tText.innerHTML;\r\n            if (tInnerText.split(\" \").length > 1) {\r\n                tText.innerHTML = \"\";\r\n                tInnerText.split(\" \").forEach((e, i) => {\r\n                    let tSpan = this.createSVGElement(\"tspan\", {\r\n                        dy: i === 0 ? \"0em\" : \".8em\",\r\n                        x: \"50\"\r\n                    });\r\n                    tSpan.innerHTML = e;\r\n                    tText.appendChild(tSpan);\r\n                });\r\n                setTimeout(() => {\r\n                    this.svg.style.height =\r\n                        tText.getBoundingClientRect().height + 70;\r\n                    this.svg.style.margin = \"15px auto\";\r\n                }, 250);\r\n            } else {\r\n                while (tWidth > sWidth) {\r\n                    let fontSize = parseInt(\r\n                        window\r\n                            .getComputedStyle(tText, null)\r\n                            .getPropertyValue(\"font-size\")\r\n                    );\r\n                    tText.style.fontSize = fontSize - 1 + \"px\";\r\n                    tWidth = tText.getBoundingClientRect().width;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setWindowHeight() {\r\n        this.setState({\r\n            winHeight: window.innerHeight\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout placeholder={false}>\r\n                <SEO\r\n                    lang=\"en\"\r\n                    title={this.props.data.site.siteMetadata.title}\r\n                />\r\n                <div\r\n                    className=\"wall\"\r\n                    style={{ height: this.state.winHeight + \"px\" }}\r\n                >\r\n                    <div className=\"intro container\">\r\n                        <div className=\"main-title text-primary\">\r\n                            <svg\r\n                                width=\"90%\"\r\n                                height=\"220px\"\r\n                                viewBox=\"0 0 100 100\"\r\n                                preserveAspectRatio=\"xMidYMid slice\"\r\n                                ref={c => (this.svg = c)}\r\n                            >\r\n                                {this.props.data.site.siteMetadata\r\n                                    .capitalizeTitleOnHome\r\n                                    ? this.props.data.site.siteMetadata.title.toUpperCase()\r\n                                    : this.props.data.site.siteMetadata.title}\r\n                                <pattern\r\n                                    id=\"wallPattern\"\r\n                                    patternUnits=\"userSpaceOnUse\"\r\n                                    width=\"100\"\r\n                                    height=\"100\"\r\n                                >\r\n                                    <rect\r\n                                        x=\"0\"\r\n                                        y=\"0\"\r\n                                        className=\"fill-primary\"\r\n                                        width=\"100\"\r\n                                        height=\"100\"\r\n                                    />\r\n                                    <image\r\n                                        xlinkHref=\"/images/wall.jpg\"\r\n                                        height=\"50\"\r\n                                        width=\"86\"\r\n                                        y=\"0\"\r\n                                        preserveAspectRatio=\"none\"\r\n                                    ></image>\r\n                                </pattern>\r\n                                <text\r\n                                    fill=\"url(#wallPattern)\"\r\n                                    textAnchor=\"middle\"\r\n                                    x=\"50\"\r\n                                    y=\"50\"\r\n                                >\r\n                                    {this.props.data.site.siteMetadata\r\n                                        .capitalizeTitleOnHome\r\n                                        ? this.props.data.site.siteMetadata.title.toUpperCase()\r\n                                        : this.props.data.site.siteMetadata\r\n                                              .title}\r\n                                </text>\r\n                            </svg>\r\n                        </div>\r\n                        <p className=\"tag-line text-secondary\">\r\n                            {this.props.data.site.siteMetadata.introTag}\r\n                        </p>\r\n                        <p className=\"caption text-tertiary\">\r\n                            {this.props.data.site.siteMetadata.description}\r\n                        </p>\r\n                        <a href=\"./portfolio\" className=\"btn\">\r\n                            PORTFOLIO\r\n                        </a>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <a/>\r\n                        <a href=\"./about\" className=\"btn\">\r\n                            ABOUT\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"social-buttons\">\r\n                        <SocialLinks />\r\n                    </div>\r\n                </div>\r\n                {/* <PortfolioList /> */}\r\n                {/* <BlogList /> */}\r\n                {/* <Contact /> */}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexPage;\r\n\r\nexport const query = graphql`\r\n    query {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                capitalizeTitleOnHome\r\n                titleImage\r\n                introTag\r\n                description\r\n                social {\r\n                    name\r\n                    url\r\n                    icon\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","import React from \"react\";\r\n\r\nclass SectionTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            colorPrimary: \"#00\",\r\n            colorSecondary: \"#00\"\r\n        };\r\n\r\n        this._id = SectionTitle.counter;\r\n    }\r\n\r\n    static get counter() {\r\n        SectionTitle._counter = (SectionTitle._counter || 0) + 1;\r\n        return SectionTitle._counter;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            colorPrimary: window\r\n                .getComputedStyle(this.cp, null)\r\n                .getPropertyValue(\"color\"),\r\n            colorSecondary: window\r\n                .getComputedStyle(this.cs, null)\r\n                .getPropertyValue(\"color\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <span ref={c => (this.cp = c)} className=\"color-primary\"></span>\r\n                <span\r\n                    ref={c => (this.cs = c)}\r\n                    className=\"color-secondary\"\r\n                ></span>\r\n                <svg\r\n                    width=\"100%\"\r\n                    height=\"150\"\r\n                    viewBox=\"0 0 100 100\"\r\n                    preserveAspectRatio=\"xMidYMid slice\"\r\n                >\r\n                    <linearGradient\r\n                        id={\"primaryGradient\" + this._id}\r\n                        x1=\"0\"\r\n                        x2=\"100%\"\r\n                        y1=\"0\"\r\n                        y2=\"0\"\r\n                        gradientUnits=\"userSpaceOnUse\"\r\n                    >\r\n                        <stop stopColor={\"#4CAF50\"} offset=\"0%\" />\r\n                        <stop\r\n                            stopColor={\"#6888DF\"}\r\n                            offset=\"85%\"\r\n                        />\r\n                    </linearGradient>\r\n                    <text\r\n                        textAnchor=\"middle\"\r\n                        x=\"50\"\r\n                        y=\"52\"\r\n                        fill={\"url(#primaryGradient\" + this._id + \")\"}\r\n                    >\r\n                        {this.props.title}\r\n                    </text>\r\n                </svg>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SectionTitle;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport \"../style/list-portfolio.less\";\r\n\r\nclass PortfolioItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"item col s12\">\r\n                <div className=\"row flex\">\r\n                    <div className=\"col m6 image\">\r\n                        <Img\r\n                            fluid={\r\n                                this.props.data.node.frontmatter.image\r\n                                    .childImageSharp.fluid\r\n                            }\r\n                        />\r\n                        <Link\r\n                            to={this.props.data.node.fields.slug}\r\n                            title={this.props.data.node.frontmatter.title}\r\n                            aria-label={this.props.data.node.frontmatter.title}\r\n                            className=\"overlay-link\"\r\n                            style={{ opacity: 0 }}\r\n                        >\r\n                            {this.props.data.node.frontmatter.title}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col m6 content\">\r\n                        <h2 className=\"text-primary pseudo-divider\">\r\n                            <Link\r\n                                to={this.props.data.node.fields.slug}\r\n                                title={this.props.data.node.frontmatter.title}\r\n                                aria-label={\r\n                                    this.props.data.node.frontmatter.title\r\n                                }\r\n                            >\r\n                                {this.props.data.node.frontmatter.title}\r\n                            </Link>\r\n                        </h2>\r\n                        <p className=\"text-tertiary\">\r\n                            {this.props.data.node.frontmatter.description}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default function(props) {\r\n    const data = props.data.allMarkdownRemark.edges;\r\n    let items = [];\r\n    data.forEach(function(e, i) {\r\n        items.push(<PortfolioItem key={e.node.id} data={e} />);\r\n    });\r\n    return <div className=\"row\">{items}</div>;\r\n}\r\n"],"sourceRoot":""}